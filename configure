#!/bin/sh

# set -e

# install depes

if [ "$USER" != "root" ]; then
	SUDO="sudo"
fi

if [ `which python3` ]; then
	PYTHON=`which python3`
elif [ `which python2.7` ]; then
	PYTHON=`which python2.7`
elif [ `which python2` ]; then
	PYTHON=`which python2`
else
	PYTHON=`which python`
fi

if [ ! "$PYTHON" ]; then
	echo "\nError: Python needs to be installed first\n";
	exit 1;
fi

if [ ! "`which node`" ]; then
	echo "\nError: Nodejs needs to be installed first\n";
	exit 2;
fi

if [ "`which tsc`" = "" ]; then
	echo "Run: npm install typescript@5.8.2 -g"
	$SUDO npm install typescript@5.8.2 -g;
fi

if   [ ! -d libs/qktool ] \
	|| [ ! -d libs/quark ] \
	|| [ ! -d libs/qkmake ] \
	|| [ ! -d deps/v8 ] \
	|| [ ! -d deps/ffmpeg ] \
	|| [ ! -d deps/bptree ] \
; then
	git submodule update --init --recursive
fi

# build libs/qktool
if [ ! -f libs/qktool/out/qktool/package.json ]; then
	cd libs/qktool
	npm i
	npm run build
	cd ../..
fi

# build libs/qkmake
if [ ! -f libs/qkmake/out/qkmake/.build ]; then
	cd libs/qkmake
	npm i
	rm -rf node_modules/qktool
	cd node_modules
	ln -s ../../qktool/out/qktool
	cd ..
	npm run build
	cd ../..
	echo '' > libs/qkmake/out/qkmake/.build
fi

if [ "`which qktsc`" = "" ]; then
	make install-only
fi

# build libs/quark
if [ ! -f libs/quark/out/quark/package.json ]; then
	cd libs/quark
	npm run build
	cd ../..
fi

# build test/jsapi
if [ ! -f test/jsapi/out/jsapi/package.json ]; then
	cd test/jsapi
	npm run build
	cd ../..
fi

# build examples
if [ ! -f examples/out/examples/package.json ]; then
	cd examples
	tsc
	node _
	cd ..
fi

if   [ ! -d tools/node_modules/qktool ] \
	|| [ ! -d tools/node_modules/qkmake ] \
	|| [ ! -d tools/node_modules/quark ] \
; then
	rm -rf tools/node_modules/*
	mkdir -p tools/node_modules
	cd tools/node_modules
	ln -s ../../libs/qktool/out/qktool
	ln -s ../../libs/qkmake/out/qkmake
	ln -s ../../libs/quark/out/quark
	cd ../..
fi

export PYTHON=$PYTHON

node tools/configure.js "$@"
